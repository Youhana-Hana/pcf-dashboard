jobs:
- name: unit-tests
  serial: true
  public: true
  plan:
  - get: pcf-automation-status-dashboard
    trigger: true
  - task: run-unit-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: node
      inputs:
        - name: pcf-automation-status-dashboard
      run:
        path: sh
        args:
        - -exc
        - |
          set -e
          cd pcf-automation-status-dashboard
          npm test
          echo $?
  - task: run-client-tests
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: node
      inputs:
        - name: pcf-automation-status-dashboard
      run:
        path: sh
        args:
        - -exc
        - |
          set -e
          cd pcf-automation-status-dashboard/client
          npm test
          echo $?

- name: build-client-and-deploy-app
  serial: true
  public: true
  plan:
  - get: pcf-automation-status-dashboard
    trigger: true
    passed:
      - unit-tests
  - task: build-client-and-deploy
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: node
      inputs:
        - name: pcf-automation-status-dashboard
      run:
        path: sh
        args:
        - -exc
        - |
          set -e
          cd pcf-automation-status-dashboard
  - put: pcf
    params:
      manifest: pcf-automation-status-dashboard/manifest.yml
      path: pcf-automation-status-dashboard
      current_app_name: pcf-automation-status-dashboard

resources:
- name: pcf-automation-status-dashboard
  type: git
  source:
    branch: master
    uri: ((dashboard_git_uri))
    username: ((dashboard_git_username))
    password: ((dashboard_git_password))
- name: pcf
  type: cf
  source:
    api: ((pcf-api))
    organization: ((pcf-organization))
    space: ((pcf-space))
    username: ((pcf-deploy-username))
    password: ((pcf-deploy-password))
    skip_cert_check: true
